#include <stdio.h>
#include <string.h>

void eliminateLeftRecursion(char *nonTerminal, char productions[][20], int n) {
    char alpha[10][20], beta[10][20];
    int alphaCount = 0, betaCount = 0;

    for (int i = 0; i < n; i++) {
        if (productions[i][0] == nonTerminal[0]) {
            strcpy(alpha[alphaCount++], productions[i] + 1);
        } else {
            strcpy(beta[betaCount++], productions[i]);
        }
    }

    if (alphaCount == 0) {
        printf("No left recursion.\n");
        return;
    }

    printf("%s ->", nonTerminal);
    for (int i = 0; i < betaCount; i++) {
        printf(" %s%s'", beta[i], nonTerminal);
        if (i != betaCount - 1) printf(" |");
    }
    printf("\n%s' ->", nonTerminal);
    for (int i = 0; i < alphaCount; i++) {
        printf(" %s%s'", alpha[i], nonTerminal);
        if (i != alphaCount - 1) printf(" |");
    }
    printf(" Îµ\n");
}

int main() {
    char nonTerminal[20], productions[10][20];
    int n;

    printf("Enter the non-terminal: ");
    scanf("%s", nonTerminal);
    printf("Enter the number of productions: ");
    scanf("%d", &n);

    for (int i = 0; i < n; i++) {
        printf("Enter production %d: ", i + 1);
        scanf("%s", productions[i]);
    }

    eliminateLeftRecursion(nonTerminal, productions, n);
    return 0;
}
